{"pageProps":{"post":{"title":"GoogleのMediaPipeでMLアプリ開発が楽になる","date":"2019-06-18T21:30:00.000Z","tags":["mediapipe","deeplearning"],"summary":"GoogleがMediaPipeを公開。 エッジもサーバーも、MLを組み込んだアプリケーションを作るのが楽になりそうだ。","slug":"mediapipe","locale":"en","body":{"raw":"\nGoogle が MediaPipe を公開。 エッジもサーバーも、ML を組み込んだアプリケーションを作るのが楽になりそうだ。\n\nhttps://twitter.com/_tkato_/status/1141028951734677504\n\n- [Google Research Perception - CV4AR/VR - MediaPipe](https://sites.google.com/view/perception-cv4arvr/mediapipe)\n- [MediaPipe — MediaPipe v0.5 documentation](https://mediapipe.readthedocs.io/en/latest/index.html)\n- https://github.com/google/mediapipe\n\nたとえば顔検出のアプリケーションを作る上でも、画像の前処理、モデルでの推論、結果の後処理、描画、など複数のコンポーネントに分かれる。 さらにモバイルデバイスのセンサなど活用したアプリを作ろうとすると ML 以外のところでデータの同期やら諸々が大変になってくる。 MediaPipe は、これを各機能のノードからなるグラフとして扱い、各コンポーネントの組み合わせや切り替えでアルゴリズムのパイプラインを開発できるようにしている。\n\n最も特徴的なのは、グラフを DSL(pbtxt)で記述すること。コードはほとんど書かなくていい。\n\n顔検出のサンプルがわかりやすい。\n[mediapipe/face_detection_android_gpu.md at 3730fa08ab226aab00d8c30c1c6ea591da6f85e8 · google/mediapipe · GitHub](https://github.com/google/mediapipe/blob/3730fa08ab226aab00d8c30c1c6ea591da6f85e8/mediapipe/docs/face_detection_android_gpu.md#graph)\n\n- ビデオ入力から前処理、tflite での推論、後処理、描画までがグラフになってる\n- グラフのノードが Calculator で、in/out の stream に接続\n- オプションもここで指定できるようなので、汎用的な Calculator を作っておけばコードに触らずにアプリ用の設定ができる\n\nグラフのデバッグのために、オンラインで使える Visualizer がある。 これで Calculator 間の接続が期待通りかなど確認。\n\n[Visualizing MediaPipe Graphs — MediaPipe v0.5 documentation](https://mediapipe.readthedocs.io/en/latest/visualizer.html)\n\nノード間を流れるデータは Packet といい、タイムスタンプと任意のデータへのポインタ（ref count みたい）からなる。 タイムスタンプで複数のセンサデータを sync したりするみたい。\n\nMainActivity が色々含めて 159 行。パイプラインは DSL で書いているのでこれを読み込むお決まりのコードを書くだけのようだ。\nhttps://github.com/google/mediapipe/blob/d68f5e416903e3d756ebe07d08c4a3b911741a91/mediapipe/examples/android/src/java/com/google/mediapipe/apps/objectdetectiongpu/MainActivity.java\n\nサンプルは、Android や PC 向けがある。iOS は今後サポートされるようだ。\n[Examples — MediaPipe v0.5 documentation](https://mediapipe.readthedocs.io/en/latest/examples.html)\n\nプロファイリングの API も実装はされており、今後プロファイラのツールがでるらしい。\n[Measuring Performance — MediaPipe v0.5 documentation](https://mediapipe.readthedocs.io/en/latest/measure_performance.html)\n\nMediaPipe Calculator Registory 的なものが登場して、学習済みの各種モデルや画像処理等が使えるようになるのではないかと期待している。 再利用可能な形で ML それに関連するコンポーネントを作成/提供できると非常に嬉しいので、MediaPipe は Watch。\n\nまさに以下の Abstract で言ってる課題感がある。\n\n[Google Research Perception - CV4AR/VR - MediaPipe](https://sites.google.com/view/perception-cv4arvr/mediapipe)\n\n過去に公開された様々なアプリケーションも MediaPipe 使ってるんですね。アプリケーション開発の課題からそれをフレームワークにしちゃうの相変わらず強い。 MediaPipe は特にモバイルでの AR 系のアプリ開発に fit してるが、サーバーサイドでの ML パイプライン（ワークフローエンジンで構築するレベルでなく、1 プロセスに閉じたようなアプリの中のパイプライン）構築で便利そう。 いや、他に最適なフレームワーク有るのかな。面白いもの知っている方は教えてください。\n\n使ってみつつ、以下を読んでいきたい\n\n- [Framework Concepts — MediaPipe v0.5 documentation](https://mediapipe.readthedocs.io/en/latest/framework_concepts.html)\n- [Framework Architecture — MediaPipe v0.5 documentation](https://mediapipe.readthedocs.io/en/latest/scheduling_sync.html)\n","code":"var Component=(()=>{var h=Object.create;var c=Object.defineProperty;var s=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),M=(t,e)=>{for(var a in e)c(t,a,{get:e[a],enumerable:!0})},r=(t,e,a,p)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let d of m(e))!u.call(t,d)&&d!==a&&c(t,d,{get:()=>e[d],enumerable:!(p=s(e,d))||p.enumerable});return t};var b=(t,e,a)=>(a=t!=null?h(g(t)):{},r(e||!t||!t.__esModule?c(a,\"default\",{value:t,enumerable:!0}):a,t)),P=t=>r(c({},\"__esModule\",{value:!0}),t);var n=f((C,o)=>{o.exports=_jsx_runtime});var j={};M(j,{default:()=>x,frontmatter:()=>v});var i=b(n()),v={title:\"Google\\u306EMediaPipe\\u3067ML\\u30A2\\u30D7\\u30EA\\u958B\\u767A\\u304C\\u697D\\u306B\\u306A\\u308B\",date:new Date(15608934e5),slug:\"mediapipe\",tags:[\"mediapipe\",\"deeplearning\"],summary:\"Google\\u304CMediaPipe\\u3092\\u516C\\u958B\\u3002 \\u30A8\\u30C3\\u30B8\\u3082\\u30B5\\u30FC\\u30D0\\u30FC\\u3082\\u3001ML\\u3092\\u7D44\\u307F\\u8FBC\\u3093\\u3060\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u4F5C\\u308B\\u306E\\u304C\\u697D\\u306B\\u306A\\u308A\\u305D\\u3046\\u3060\\u3002\"};function l(t){let e=Object.assign({p:\"p\",a:\"a\",ul:\"ul\",li:\"li\"},t.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:\"Google \\u304C MediaPipe \\u3092\\u516C\\u958B\\u3002 \\u30A8\\u30C3\\u30B8\\u3082\\u30B5\\u30FC\\u30D0\\u30FC\\u3082\\u3001ML \\u3092\\u7D44\\u307F\\u8FBC\\u3093\\u3060\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u4F5C\\u308B\\u306E\\u304C\\u697D\\u306B\\u306A\\u308A\\u305D\\u3046\\u3060\\u3002\"}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:\"https://twitter.com/_tkato_/status/1141028951734677504\",children:\"https://twitter.com/_tkato_/status/1141028951734677504\"})}),(0,i.jsxs)(e.ul,{children:[(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://sites.google.com/view/perception-cv4arvr/mediapipe\",children:\"Google Research Perception - CV4AR/VR - MediaPipe\"})}),(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://mediapipe.readthedocs.io/en/latest/index.html\",children:\"MediaPipe \\u2014 MediaPipe v0.5 documentation\"})}),(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://github.com/google/mediapipe\",children:\"https://github.com/google/mediapipe\"})})]}),(0,i.jsx)(e.p,{children:\"\\u305F\\u3068\\u3048\\u3070\\u9854\\u691C\\u51FA\\u306E\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u3092\\u4F5C\\u308B\\u4E0A\\u3067\\u3082\\u3001\\u753B\\u50CF\\u306E\\u524D\\u51E6\\u7406\\u3001\\u30E2\\u30C7\\u30EB\\u3067\\u306E\\u63A8\\u8AD6\\u3001\\u7D50\\u679C\\u306E\\u5F8C\\u51E6\\u7406\\u3001\\u63CF\\u753B\\u3001\\u306A\\u3069\\u8907\\u6570\\u306E\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306B\\u5206\\u304B\\u308C\\u308B\\u3002 \\u3055\\u3089\\u306B\\u30E2\\u30D0\\u30A4\\u30EB\\u30C7\\u30D0\\u30A4\\u30B9\\u306E\\u30BB\\u30F3\\u30B5\\u306A\\u3069\\u6D3B\\u7528\\u3057\\u305F\\u30A2\\u30D7\\u30EA\\u3092\\u4F5C\\u308D\\u3046\\u3068\\u3059\\u308B\\u3068 ML \\u4EE5\\u5916\\u306E\\u3068\\u3053\\u308D\\u3067\\u30C7\\u30FC\\u30BF\\u306E\\u540C\\u671F\\u3084\\u3089\\u8AF8\\u3005\\u304C\\u5927\\u5909\\u306B\\u306A\\u3063\\u3066\\u304F\\u308B\\u3002 MediaPipe \\u306F\\u3001\\u3053\\u308C\\u3092\\u5404\\u6A5F\\u80FD\\u306E\\u30CE\\u30FC\\u30C9\\u304B\\u3089\\u306A\\u308B\\u30B0\\u30E9\\u30D5\\u3068\\u3057\\u3066\\u6271\\u3044\\u3001\\u5404\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306E\\u7D44\\u307F\\u5408\\u308F\\u305B\\u3084\\u5207\\u308A\\u66FF\\u3048\\u3067\\u30A2\\u30EB\\u30B4\\u30EA\\u30BA\\u30E0\\u306E\\u30D1\\u30A4\\u30D7\\u30E9\\u30A4\\u30F3\\u3092\\u958B\\u767A\\u3067\\u304D\\u308B\\u3088\\u3046\\u306B\\u3057\\u3066\\u3044\\u308B\\u3002\"}),(0,i.jsx)(e.p,{children:\"\\u6700\\u3082\\u7279\\u5FB4\\u7684\\u306A\\u306E\\u306F\\u3001\\u30B0\\u30E9\\u30D5\\u3092 DSL(pbtxt)\\u3067\\u8A18\\u8FF0\\u3059\\u308B\\u3053\\u3068\\u3002\\u30B3\\u30FC\\u30C9\\u306F\\u307B\\u3068\\u3093\\u3069\\u66F8\\u304B\\u306A\\u304F\\u3066\\u3044\\u3044\\u3002\"}),(0,i.jsxs)(e.p,{children:[\"\\u9854\\u691C\\u51FA\\u306E\\u30B5\\u30F3\\u30D7\\u30EB\\u304C\\u308F\\u304B\\u308A\\u3084\\u3059\\u3044\\u3002 \",(0,i.jsx)(e.a,{href:\"https://github.com/google/mediapipe/blob/3730fa08ab226aab00d8c30c1c6ea591da6f85e8/mediapipe/docs/face_detection_android_gpu.md#graph\",children:\"mediapipe/face_detection_android_gpu.md at 3730fa08ab226aab00d8c30c1c6ea591da6f85e8 \\xB7 google/mediapipe \\xB7 GitHub\"})]}),(0,i.jsxs)(e.ul,{children:[(0,i.jsx)(e.li,{children:\"\\u30D3\\u30C7\\u30AA\\u5165\\u529B\\u304B\\u3089\\u524D\\u51E6\\u7406\\u3001tflite \\u3067\\u306E\\u63A8\\u8AD6\\u3001\\u5F8C\\u51E6\\u7406\\u3001\\u63CF\\u753B\\u307E\\u3067\\u304C\\u30B0\\u30E9\\u30D5\\u306B\\u306A\\u3063\\u3066\\u308B\"}),(0,i.jsx)(e.li,{children:\"\\u30B0\\u30E9\\u30D5\\u306E\\u30CE\\u30FC\\u30C9\\u304C Calculator \\u3067\\u3001in/out \\u306E stream \\u306B\\u63A5\\u7D9A\"}),(0,i.jsx)(e.li,{children:\"\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3082\\u3053\\u3053\\u3067\\u6307\\u5B9A\\u3067\\u304D\\u308B\\u3088\\u3046\\u306A\\u306E\\u3067\\u3001\\u6C4E\\u7528\\u7684\\u306A Calculator \\u3092\\u4F5C\\u3063\\u3066\\u304A\\u3051\\u3070\\u30B3\\u30FC\\u30C9\\u306B\\u89E6\\u3089\\u305A\\u306B\\u30A2\\u30D7\\u30EA\\u7528\\u306E\\u8A2D\\u5B9A\\u304C\\u3067\\u304D\\u308B\"})]}),(0,i.jsx)(e.p,{children:\"\\u30B0\\u30E9\\u30D5\\u306E\\u30C7\\u30D0\\u30C3\\u30B0\\u306E\\u305F\\u3081\\u306B\\u3001\\u30AA\\u30F3\\u30E9\\u30A4\\u30F3\\u3067\\u4F7F\\u3048\\u308B Visualizer \\u304C\\u3042\\u308B\\u3002 \\u3053\\u308C\\u3067 Calculator \\u9593\\u306E\\u63A5\\u7D9A\\u304C\\u671F\\u5F85\\u901A\\u308A\\u304B\\u306A\\u3069\\u78BA\\u8A8D\\u3002\"}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:\"https://mediapipe.readthedocs.io/en/latest/visualizer.html\",children:\"Visualizing MediaPipe Graphs \\u2014 MediaPipe v0.5 documentation\"})}),(0,i.jsx)(e.p,{children:\"\\u30CE\\u30FC\\u30C9\\u9593\\u3092\\u6D41\\u308C\\u308B\\u30C7\\u30FC\\u30BF\\u306F Packet \\u3068\\u3044\\u3044\\u3001\\u30BF\\u30A4\\u30E0\\u30B9\\u30BF\\u30F3\\u30D7\\u3068\\u4EFB\\u610F\\u306E\\u30C7\\u30FC\\u30BF\\u3078\\u306E\\u30DD\\u30A4\\u30F3\\u30BF\\uFF08ref count \\u307F\\u305F\\u3044\\uFF09\\u304B\\u3089\\u306A\\u308B\\u3002 \\u30BF\\u30A4\\u30E0\\u30B9\\u30BF\\u30F3\\u30D7\\u3067\\u8907\\u6570\\u306E\\u30BB\\u30F3\\u30B5\\u30C7\\u30FC\\u30BF\\u3092 sync \\u3057\\u305F\\u308A\\u3059\\u308B\\u307F\\u305F\\u3044\\u3002\"}),(0,i.jsxs)(e.p,{children:[\"MainActivity \\u304C\\u8272\\u3005\\u542B\\u3081\\u3066 159 \\u884C\\u3002\\u30D1\\u30A4\\u30D7\\u30E9\\u30A4\\u30F3\\u306F DSL \\u3067\\u66F8\\u3044\\u3066\\u3044\\u308B\\u306E\\u3067\\u3053\\u308C\\u3092\\u8AAD\\u307F\\u8FBC\\u3080\\u304A\\u6C7A\\u307E\\u308A\\u306E\\u30B3\\u30FC\\u30C9\\u3092\\u66F8\\u304F\\u3060\\u3051\\u306E\\u3088\\u3046\\u3060\\u3002 \",(0,i.jsx)(e.a,{href:\"https://github.com/google/mediapipe/blob/d68f5e416903e3d756ebe07d08c4a3b911741a91/mediapipe/examples/android/src/java/com/google/mediapipe/apps/objectdetectiongpu/MainActivity.java\",children:\"https://github.com/google/mediapipe/blob/d68f5e416903e3d756ebe07d08c4a3b911741a91/mediapipe/examples/android/src/java/com/google/mediapipe/apps/objectdetectiongpu/MainActivity.java\"})]}),(0,i.jsxs)(e.p,{children:[\"\\u30B5\\u30F3\\u30D7\\u30EB\\u306F\\u3001Android \\u3084 PC \\u5411\\u3051\\u304C\\u3042\\u308B\\u3002iOS \\u306F\\u4ECA\\u5F8C\\u30B5\\u30DD\\u30FC\\u30C8\\u3055\\u308C\\u308B\\u3088\\u3046\\u3060\\u3002 \",(0,i.jsx)(e.a,{href:\"https://mediapipe.readthedocs.io/en/latest/examples.html\",children:\"Examples \\u2014 MediaPipe v0.5 documentation\"})]}),(0,i.jsxs)(e.p,{children:[\"\\u30D7\\u30ED\\u30D5\\u30A1\\u30A4\\u30EA\\u30F3\\u30B0\\u306E API \\u3082\\u5B9F\\u88C5\\u306F\\u3055\\u308C\\u3066\\u304A\\u308A\\u3001\\u4ECA\\u5F8C\\u30D7\\u30ED\\u30D5\\u30A1\\u30A4\\u30E9\\u306E\\u30C4\\u30FC\\u30EB\\u304C\\u3067\\u308B\\u3089\\u3057\\u3044\\u3002 \",(0,i.jsx)(e.a,{href:\"https://mediapipe.readthedocs.io/en/latest/measure_performance.html\",children:\"Measuring Performance \\u2014 MediaPipe v0.5 documentation\"})]}),(0,i.jsx)(e.p,{children:\"MediaPipe Calculator Registory \\u7684\\u306A\\u3082\\u306E\\u304C\\u767B\\u5834\\u3057\\u3066\\u3001\\u5B66\\u7FD2\\u6E08\\u307F\\u306E\\u5404\\u7A2E\\u30E2\\u30C7\\u30EB\\u3084\\u753B\\u50CF\\u51E6\\u7406\\u7B49\\u304C\\u4F7F\\u3048\\u308B\\u3088\\u3046\\u306B\\u306A\\u308B\\u306E\\u3067\\u306F\\u306A\\u3044\\u304B\\u3068\\u671F\\u5F85\\u3057\\u3066\\u3044\\u308B\\u3002 \\u518D\\u5229\\u7528\\u53EF\\u80FD\\u306A\\u5F62\\u3067 ML \\u305D\\u308C\\u306B\\u95A2\\u9023\\u3059\\u308B\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u3092\\u4F5C\\u6210/\\u63D0\\u4F9B\\u3067\\u304D\\u308B\\u3068\\u975E\\u5E38\\u306B\\u5B09\\u3057\\u3044\\u306E\\u3067\\u3001MediaPipe \\u306F Watch\\u3002\"}),(0,i.jsx)(e.p,{children:\"\\u307E\\u3055\\u306B\\u4EE5\\u4E0B\\u306E Abstract \\u3067\\u8A00\\u3063\\u3066\\u308B\\u8AB2\\u984C\\u611F\\u304C\\u3042\\u308B\\u3002\"}),(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:\"https://sites.google.com/view/perception-cv4arvr/mediapipe\",children:\"Google Research Perception - CV4AR/VR - MediaPipe\"})}),(0,i.jsx)(e.p,{children:\"\\u904E\\u53BB\\u306B\\u516C\\u958B\\u3055\\u308C\\u305F\\u69D8\\u3005\\u306A\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u3082 MediaPipe \\u4F7F\\u3063\\u3066\\u308B\\u3093\\u3067\\u3059\\u306D\\u3002\\u30A2\\u30D7\\u30EA\\u30B1\\u30FC\\u30B7\\u30E7\\u30F3\\u958B\\u767A\\u306E\\u8AB2\\u984C\\u304B\\u3089\\u305D\\u308C\\u3092\\u30D5\\u30EC\\u30FC\\u30E0\\u30EF\\u30FC\\u30AF\\u306B\\u3057\\u3061\\u3083\\u3046\\u306E\\u76F8\\u5909\\u308F\\u3089\\u305A\\u5F37\\u3044\\u3002 MediaPipe \\u306F\\u7279\\u306B\\u30E2\\u30D0\\u30A4\\u30EB\\u3067\\u306E AR \\u7CFB\\u306E\\u30A2\\u30D7\\u30EA\\u958B\\u767A\\u306B fit \\u3057\\u3066\\u308B\\u304C\\u3001\\u30B5\\u30FC\\u30D0\\u30FC\\u30B5\\u30A4\\u30C9\\u3067\\u306E ML \\u30D1\\u30A4\\u30D7\\u30E9\\u30A4\\u30F3\\uFF08\\u30EF\\u30FC\\u30AF\\u30D5\\u30ED\\u30FC\\u30A8\\u30F3\\u30B8\\u30F3\\u3067\\u69CB\\u7BC9\\u3059\\u308B\\u30EC\\u30D9\\u30EB\\u3067\\u306A\\u304F\\u30011 \\u30D7\\u30ED\\u30BB\\u30B9\\u306B\\u9589\\u3058\\u305F\\u3088\\u3046\\u306A\\u30A2\\u30D7\\u30EA\\u306E\\u4E2D\\u306E\\u30D1\\u30A4\\u30D7\\u30E9\\u30A4\\u30F3\\uFF09\\u69CB\\u7BC9\\u3067\\u4FBF\\u5229\\u305D\\u3046\\u3002 \\u3044\\u3084\\u3001\\u4ED6\\u306B\\u6700\\u9069\\u306A\\u30D5\\u30EC\\u30FC\\u30E0\\u30EF\\u30FC\\u30AF\\u6709\\u308B\\u306E\\u304B\\u306A\\u3002\\u9762\\u767D\\u3044\\u3082\\u306E\\u77E5\\u3063\\u3066\\u3044\\u308B\\u65B9\\u306F\\u6559\\u3048\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"}),(0,i.jsx)(e.p,{children:\"\\u4F7F\\u3063\\u3066\\u307F\\u3064\\u3064\\u3001\\u4EE5\\u4E0B\\u3092\\u8AAD\\u3093\\u3067\\u3044\\u304D\\u305F\\u3044\"}),(0,i.jsxs)(e.ul,{children:[(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://mediapipe.readthedocs.io/en/latest/framework_concepts.html\",children:\"Framework Concepts \\u2014 MediaPipe v0.5 documentation\"})}),(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:\"https://mediapipe.readthedocs.io/en/latest/scheduling_sync.html\",children:\"Framework Architecture \\u2014 MediaPipe v0.5 documentation\"})})]})]})}function _(t={}){let{wrapper:e}=t.components||{};return e?(0,i.jsx)(e,Object.assign({},t,{children:(0,i.jsx)(l,t)})):l(t)}var x=_;return P(j);})();\n;return Component;"},"_id":"posts/201906/mediapipe.mdx","_raw":{"sourceFilePath":"posts/201906/mediapipe.mdx","sourceFileName":"mediapipe.mdx","sourceFileDir":"posts/201906","contentType":"mdx","flattenedPath":"posts/201906/mediapipe"},"type":"Blog","readingTime":{"text":"4 min read","minutes":3.865,"time":231900,"words":773},"path":"posts/mediapipe","filePath":"posts/201906/mediapipe.mdx","toc":[]},"authorDetails":[{"name":"Tomohiro Kato / @tkat0","avatar":"/static/images/tkat0.jpg","occupation":"Softweare Engineer / Double Bassist","twitter":"https://twitter.com/_tkato_","linkedin":"https://www.linkedin.com/in/tkat0/","github":"https://github.com/tkat0","slug":"default","locale":"en","type":"Authors","readingTime":{"text":"3 min read","minutes":2.33,"time":139800,"words":466},"path":"posts/default","filePath":"authors/default.en.mdx","toc":[{"value":"2021-","url":"#2021-","depth":3},{"value":"2018-2020","url":"#2018-2020","depth":3},{"value":"2014-2017","url":"#2014-2017","depth":3},{"value":"Publications","url":"#publications","depth":3},{"value":"2022","url":"#2022","depth":4},{"value":"2021","url":"#2021","depth":4},{"value":"2020","url":"#2020","depth":4},{"value":"2019","url":"#2019","depth":4},{"value":"2018","url":"#2018","depth":4}],"tags":[]}],"prev":{"title":"ONNXRuntime調査","date":"2019-05-22T00:00:00.000Z","tags":["onnxruntime","deeplearning","onnx","tvm"],"summary":"ONNXモデルの推論エンジン。TensorRTのpreviewが出ると。この機会にちょっと調べる。","slug":"read-onnxruntime","locale":"en","type":"Blog","readingTime":{"text":"2 min read","minutes":1.945,"time":116700,"words":389},"path":"posts/read-onnxruntime","filePath":"posts/201903/read-onnxruntime.mdx","toc":[{"value":"Usage","url":"#usage","depth":2},{"value":"Design and Key Features","url":"#design-and-key-features","depth":2},{"value":"その他 1","url":"#その他-1","depth":2},{"value":"その他 2","url":"#その他-2","depth":2}]},"next":{"title":"タスクランナーをmakeからcargo-makeへ移行","date":"2019-06-30T09:00:00.000Z","tags":["rust"],"summary":"cargo-makeはRustで書かれたタスクランナー。makeをよりリッチにしたようで使い勝手が良かった。","slug":"cargo-make-1","locale":"en","type":"Blog","readingTime":{"text":"14 min read","minutes":13.79,"time":827400,"words":2758},"path":"posts/cargo-make-1","filePath":"posts/201906/cargo-make-1.mdx","toc":[{"value":"やりたかったことや、既存のツールでの課題","url":"#やりたかったことや既存のツールでの課題","depth":2},{"value":"cargo-make","url":"#cargo-make","depth":2},{"value":"シェルスクリプトを直接書く","url":"#シェルスクリプトを直接書く","depth":3},{"value":"Python スクリプトを直接書く","url":"#python-スクリプトを直接書く","depth":3},{"value":"コマンドライン引数の読み取り","url":"#コマンドライン引数の読み取り","depth":3},{"value":"Extend","url":"#extend","depth":3},{"value":"その他の機能","url":"#その他の機能","depth":3},{"value":"感想","url":"#感想","depth":2}]}},"__N_SSG":true}