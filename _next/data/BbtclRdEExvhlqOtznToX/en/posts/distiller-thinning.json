{"pageProps":{"post":{"title":"Distillerのthinningの仕様","date":"2019-02-02T03:00:01.000Z","tags":["distiller","deeplearning","pruning"],"summary":"DistillerはPytorch向けのpruningやquantizationを行うライブラリだが、Channel Pruning後にWeightをshrinkしてサイズを小さくする\"thinning\"ができる。\n今回はそのソースを読んで気がついたことのまとめ。","slug":"distiller-thinning","locale":"en","body":{"raw":"\n[Distiller](https://github.com/NervanaSystems/distiller)は Pytorch 向けの pruning や quantization を行うライブラリだが、Channel Pruning 後に Weight を shrink してサイズを小さくする\"thinning\"ができる。\n今回はそのソースを読んで気がついたことのまとめ。\n\nこれは昔書いた記事\n\nDistiller で DeepLearning のモデルを軽量化: Gradual Pruning 編 - tkato’s blog\nhttp://tkat0.hateblo.jp/entry/2018/05/22/082911\n\nDistiller とは\nPyTorch 向けのモデル圧縮ライブラリです。以下のような特徴があります。\n\n- 数種類の枝刈り(pruning), 量子化(quantization), 正則化(regularization)アルゴリズムを実装\n- 既存の学習スクリプトの training loop に追加するだけで使える\n- 設定は YAML。モデルのレイヤー単位で pruning のパラメータを変えるなど柔軟な設定。\n- TensorBoard と連携した、モデルの weight や精度の可視化\n\n今回見る thinning だが、以下で説明している rebuild と同じもの。\n\nhttps://www.slideshare.net/tkatojp/chainerchannel-pruning-125938007\n\n対象とするソースは以下。\n\nhttps://github.com/NervanaSystems/distiller/blob/e564a05f47a9e15e8575615d1ba92358b9184b67/distiller/thinning.py#L223-L227\n\nこの API で、model から値がゼロの filter を除外してコンパクトな weight を作る。\n\n```python\ndef remove_filters(model, zeros_mask_dict, arch, dataset, optimizer):\n    sgraph = create_graph(dataset, arch)\n    thinning_recipe = create_thinning_recipe_filters(sgraph, model, zeros_mask_dict)\n    apply_and_save_recipe(model, zeros_mask_dict, thinning_recipe, optimizer)\n    return model\n```\n\narch や dataset を指定する時点でお察しだけど、cifar や imagenet 向け特定のモデルしか対応していない。\nもちろん、内部で呼んでる関数をダイレクトにつなげれば任意のモデルを thinning できる（はずだった）。\n\n中で何をやっているかを簡単に説明すると\n\n1. PyTorch のモデルを`SummaryGraph`クラスのオブジェクトへ変換する (`create_graph`)\n   - 指定したレイヤーの後続するレイヤーを取得したり（`successors_f()`）できるクラス\n   - `torch.jit.get_trace_graph` で計算グラフをトレースし、その後 `self.ops`や`self.edges`といったデータ構造に入れる\n   - 層ごとの計算量（MACs）もここで計算\n2. 値がゼロになるフィルターを除外し、その層に後続する Conv/FC/BN の入力も合わせて調整する（`create_thinning_recipe_filters`, `apply_and_save_recipe`）\n\n**2 が微妙で、各層に対する実装がハードコーディングされている。**\n\n- 例えば後続する層が GroupConv(depth-wise とか)の場合は対応していないので変換できない\n- 現在の層の直後 1 つしか考慮していない\n  - `conv-bn-conv-bn-fc` という構造前提のアルゴリズム。大体のモデルはそうだろうけど。。。\n\nなので、例えば MobileNet とかは thinning できないということ。ああ〜。\n\nそれで作ったわけですが（忙しくてメンテできてない）。\n\nhttps://github.com/DeNA/ChainerPruner\n","code":"var Component=(()=>{var d=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var N=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),k=(i,n)=>{for(var a in n)r(i,a,{get:n[a],enumerable:!0})},c=(i,n,a,l)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let t of u(n))!g.call(i,t)&&t!==a&&r(i,t,{get:()=>n[t],enumerable:!(l=p(n,t))||l.enumerable});return i};var _=(i,n,a)=>(a=i!=null?d(m(i)):{},c(n||!i||!i.__esModule?r(a,\"default\",{value:i,enumerable:!0}):a,i)),b=i=>c(r({},\"__esModule\",{value:!0}),i);var h=N((v,s)=>{s.exports=_jsx_runtime});var j={};k(j,{default:()=>w,frontmatter:()=>f});var e=_(h()),f={title:\"Distiller\\u306Ethinning\\u306E\\u4ED5\\u69D8\",date:new Date(1549076401e3),slug:\"distiller-thinning\",tags:[\"distiller\",\"deeplearning\",\"pruning\"],summary:`Distiller\\u306FPytorch\\u5411\\u3051\\u306Epruning\\u3084quantization\\u3092\\u884C\\u3046\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3060\\u304C\\u3001Channel Pruning\\u5F8C\\u306BWeight\\u3092shrink\\u3057\\u3066\\u30B5\\u30A4\\u30BA\\u3092\\u5C0F\\u3055\\u304F\\u3059\\u308B\"thinning\"\\u304C\\u3067\\u304D\\u308B\\u3002\n\\u4ECA\\u56DE\\u306F\\u305D\\u306E\\u30BD\\u30FC\\u30B9\\u3092\\u8AAD\\u3093\\u3067\\u6C17\\u304C\\u3064\\u3044\\u305F\\u3053\\u3068\\u306E\\u307E\\u3068\\u3081\\u3002`};function o(i){let n=Object.assign({p:\"p\",a:\"a\",ul:\"ul\",li:\"li\",pre:\"pre\",code:\"code\",span:\"span\",ol:\"ol\",strong:\"strong\"},i.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.a,{href:\"https://github.com/NervanaSystems/distiller\",children:\"Distiller\"}),'\\u306F Pytorch \\u5411\\u3051\\u306E pruning \\u3084 quantization \\u3092\\u884C\\u3046\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3060\\u304C\\u3001Channel Pruning \\u5F8C\\u306B Weight \\u3092 shrink \\u3057\\u3066\\u30B5\\u30A4\\u30BA\\u3092\\u5C0F\\u3055\\u304F\\u3059\\u308B\"thinning\"\\u304C\\u3067\\u304D\\u308B\\u3002 \\u4ECA\\u56DE\\u306F\\u305D\\u306E\\u30BD\\u30FC\\u30B9\\u3092\\u8AAD\\u3093\\u3067\\u6C17\\u304C\\u3064\\u3044\\u305F\\u3053\\u3068\\u306E\\u307E\\u3068\\u3081\\u3002']}),(0,e.jsx)(n.p,{children:\"\\u3053\\u308C\\u306F\\u6614\\u66F8\\u3044\\u305F\\u8A18\\u4E8B\"}),(0,e.jsxs)(n.p,{children:[\"Distiller \\u3067 DeepLearning \\u306E\\u30E2\\u30C7\\u30EB\\u3092\\u8EFD\\u91CF\\u5316: Gradual Pruning \\u7DE8 - tkato\\u2019s blog \",(0,e.jsx)(n.a,{href:\"http://tkat0.hateblo.jp/entry/2018/05/22/082911\",children:\"http://tkat0.hateblo.jp/entry/2018/05/22/082911\"})]}),(0,e.jsx)(n.p,{children:\"Distiller \\u3068\\u306F PyTorch \\u5411\\u3051\\u306E\\u30E2\\u30C7\\u30EB\\u5727\\u7E2E\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3067\\u3059\\u3002\\u4EE5\\u4E0B\\u306E\\u3088\\u3046\\u306A\\u7279\\u5FB4\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\"}),(0,e.jsxs)(n.ul,{children:[(0,e.jsx)(n.li,{children:\"\\u6570\\u7A2E\\u985E\\u306E\\u679D\\u5208\\u308A(pruning), \\u91CF\\u5B50\\u5316(quantization), \\u6B63\\u5247\\u5316(regularization)\\u30A2\\u30EB\\u30B4\\u30EA\\u30BA\\u30E0\\u3092\\u5B9F\\u88C5\"}),(0,e.jsx)(n.li,{children:\"\\u65E2\\u5B58\\u306E\\u5B66\\u7FD2\\u30B9\\u30AF\\u30EA\\u30D7\\u30C8\\u306E training loop \\u306B\\u8FFD\\u52A0\\u3059\\u308B\\u3060\\u3051\\u3067\\u4F7F\\u3048\\u308B\"}),(0,e.jsx)(n.li,{children:\"\\u8A2D\\u5B9A\\u306F YAML\\u3002\\u30E2\\u30C7\\u30EB\\u306E\\u30EC\\u30A4\\u30E4\\u30FC\\u5358\\u4F4D\\u3067 pruning \\u306E\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\\u3092\\u5909\\u3048\\u308B\\u306A\\u3069\\u67D4\\u8EDF\\u306A\\u8A2D\\u5B9A\\u3002\"}),(0,e.jsx)(n.li,{children:\"TensorBoard \\u3068\\u9023\\u643A\\u3057\\u305F\\u3001\\u30E2\\u30C7\\u30EB\\u306E weight \\u3084\\u7CBE\\u5EA6\\u306E\\u53EF\\u8996\\u5316\"})]}),(0,e.jsx)(n.p,{children:\"\\u4ECA\\u56DE\\u898B\\u308B thinning \\u3060\\u304C\\u3001\\u4EE5\\u4E0B\\u3067\\u8AAC\\u660E\\u3057\\u3066\\u3044\\u308B rebuild \\u3068\\u540C\\u3058\\u3082\\u306E\\u3002\"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://www.slideshare.net/tkatojp/chainerchannel-pruning-125938007\",children:\"https://www.slideshare.net/tkatojp/chainerchannel-pruning-125938007\"})}),(0,e.jsx)(n.p,{children:\"\\u5BFE\\u8C61\\u3068\\u3059\\u308B\\u30BD\\u30FC\\u30B9\\u306F\\u4EE5\\u4E0B\\u3002\"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/NervanaSystems/distiller/blob/e564a05f47a9e15e8575615d1ba92358b9184b67/distiller/thinning.py#L223-L227\",children:\"https://github.com/NervanaSystems/distiller/blob/e564a05f47a9e15e8575615d1ba92358b9184b67/distiller/thinning.py#L223-L227\"})}),(0,e.jsx)(n.p,{children:\"\\u3053\\u306E API \\u3067\\u3001model \\u304B\\u3089\\u5024\\u304C\\u30BC\\u30ED\\u306E filter \\u3092\\u9664\\u5916\\u3057\\u3066\\u30B3\\u30F3\\u30D1\\u30AF\\u30C8\\u306A weight \\u3092\\u4F5C\\u308B\\u3002\"}),(0,e.jsx)(n.pre,{className:\"language-python\",children:(0,e.jsxs)(n.code,{className:\"language-python code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"def\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"remove_filters\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"model\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" zeros_mask_dict\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" arch\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" dataset\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" optimizer\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    sgraph \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" create_graph\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"dataset\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" arch\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    thinning_recipe \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" create_thinning_recipe_filters\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"sgraph\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" model\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" zeros_mask_dict\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    apply_and_save_recipe\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"model\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" zeros_mask_dict\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" thinning_recipe\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" optimizer\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),` model\n`]})]})}),(0,e.jsx)(n.p,{children:\"arch \\u3084 dataset \\u3092\\u6307\\u5B9A\\u3059\\u308B\\u6642\\u70B9\\u3067\\u304A\\u5BDF\\u3057\\u3060\\u3051\\u3069\\u3001cifar \\u3084 imagenet \\u5411\\u3051\\u7279\\u5B9A\\u306E\\u30E2\\u30C7\\u30EB\\u3057\\u304B\\u5BFE\\u5FDC\\u3057\\u3066\\u3044\\u306A\\u3044\\u3002 \\u3082\\u3061\\u308D\\u3093\\u3001\\u5185\\u90E8\\u3067\\u547C\\u3093\\u3067\\u308B\\u95A2\\u6570\\u3092\\u30C0\\u30A4\\u30EC\\u30AF\\u30C8\\u306B\\u3064\\u306A\\u3052\\u308C\\u3070\\u4EFB\\u610F\\u306E\\u30E2\\u30C7\\u30EB\\u3092 thinning \\u3067\\u304D\\u308B\\uFF08\\u306F\\u305A\\u3060\\u3063\\u305F\\uFF09\\u3002\"}),(0,e.jsx)(n.p,{children:\"\\u4E2D\\u3067\\u4F55\\u3092\\u3084\\u3063\\u3066\\u3044\\u308B\\u304B\\u3092\\u7C21\\u5358\\u306B\\u8AAC\\u660E\\u3059\\u308B\\u3068\"}),(0,e.jsxs)(n.ol,{children:[(0,e.jsxs)(n.li,{children:[\"PyTorch \\u306E\\u30E2\\u30C7\\u30EB\\u3092\",(0,e.jsx)(n.code,{children:\"SummaryGraph\"}),\"\\u30AF\\u30E9\\u30B9\\u306E\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u3078\\u5909\\u63DB\\u3059\\u308B (\",(0,e.jsx)(n.code,{children:\"create_graph\"}),\")\",(0,e.jsxs)(n.ul,{children:[(0,e.jsxs)(n.li,{children:[\"\\u6307\\u5B9A\\u3057\\u305F\\u30EC\\u30A4\\u30E4\\u30FC\\u306E\\u5F8C\\u7D9A\\u3059\\u308B\\u30EC\\u30A4\\u30E4\\u30FC\\u3092\\u53D6\\u5F97\\u3057\\u305F\\u308A\\uFF08\",(0,e.jsx)(n.code,{children:\"successors_f()\"}),\"\\uFF09\\u3067\\u304D\\u308B\\u30AF\\u30E9\\u30B9\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"torch.jit.get_trace_graph\"}),\" \\u3067\\u8A08\\u7B97\\u30B0\\u30E9\\u30D5\\u3092\\u30C8\\u30EC\\u30FC\\u30B9\\u3057\\u3001\\u305D\\u306E\\u5F8C \",(0,e.jsx)(n.code,{children:\"self.ops\"}),\"\\u3084\",(0,e.jsx)(n.code,{children:\"self.edges\"}),\"\\u3068\\u3044\\u3063\\u305F\\u30C7\\u30FC\\u30BF\\u69CB\\u9020\\u306B\\u5165\\u308C\\u308B\"]}),(0,e.jsx)(n.li,{children:\"\\u5C64\\u3054\\u3068\\u306E\\u8A08\\u7B97\\u91CF\\uFF08MACs\\uFF09\\u3082\\u3053\\u3053\\u3067\\u8A08\\u7B97\"})]})]}),(0,e.jsxs)(n.li,{children:[\"\\u5024\\u304C\\u30BC\\u30ED\\u306B\\u306A\\u308B\\u30D5\\u30A3\\u30EB\\u30BF\\u30FC\\u3092\\u9664\\u5916\\u3057\\u3001\\u305D\\u306E\\u5C64\\u306B\\u5F8C\\u7D9A\\u3059\\u308B Conv/FC/BN \\u306E\\u5165\\u529B\\u3082\\u5408\\u308F\\u305B\\u3066\\u8ABF\\u6574\\u3059\\u308B\\uFF08\",(0,e.jsx)(n.code,{children:\"create_thinning_recipe_filters\"}),\", \",(0,e.jsx)(n.code,{children:\"apply_and_save_recipe\"}),\"\\uFF09\"]})]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.strong,{children:\"2 \\u304C\\u5FAE\\u5999\\u3067\\u3001\\u5404\\u5C64\\u306B\\u5BFE\\u3059\\u308B\\u5B9F\\u88C5\\u304C\\u30CF\\u30FC\\u30C9\\u30B3\\u30FC\\u30C7\\u30A3\\u30F3\\u30B0\\u3055\\u308C\\u3066\\u3044\\u308B\\u3002\"})}),(0,e.jsxs)(n.ul,{children:[(0,e.jsx)(n.li,{children:\"\\u4F8B\\u3048\\u3070\\u5F8C\\u7D9A\\u3059\\u308B\\u5C64\\u304C GroupConv(depth-wise \\u3068\\u304B)\\u306E\\u5834\\u5408\\u306F\\u5BFE\\u5FDC\\u3057\\u3066\\u3044\\u306A\\u3044\\u306E\\u3067\\u5909\\u63DB\\u3067\\u304D\\u306A\\u3044\"}),(0,e.jsxs)(n.li,{children:[\"\\u73FE\\u5728\\u306E\\u5C64\\u306E\\u76F4\\u5F8C 1 \\u3064\\u3057\\u304B\\u8003\\u616E\\u3057\\u3066\\u3044\\u306A\\u3044\",(0,e.jsx)(n.ul,{children:(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"conv-bn-conv-bn-fc\"}),\" \\u3068\\u3044\\u3046\\u69CB\\u9020\\u524D\\u63D0\\u306E\\u30A2\\u30EB\\u30B4\\u30EA\\u30BA\\u30E0\\u3002\\u5927\\u4F53\\u306E\\u30E2\\u30C7\\u30EB\\u306F\\u305D\\u3046\\u3060\\u308D\\u3046\\u3051\\u3069\\u3002\\u3002\\u3002\"]})})]})]}),(0,e.jsx)(n.p,{children:\"\\u306A\\u306E\\u3067\\u3001\\u4F8B\\u3048\\u3070 MobileNet \\u3068\\u304B\\u306F thinning \\u3067\\u304D\\u306A\\u3044\\u3068\\u3044\\u3046\\u3053\\u3068\\u3002\\u3042\\u3042\\u301C\\u3002\"}),(0,e.jsx)(n.p,{children:\"\\u305D\\u308C\\u3067\\u4F5C\\u3063\\u305F\\u308F\\u3051\\u3067\\u3059\\u304C\\uFF08\\u5FD9\\u3057\\u304F\\u3066\\u30E1\\u30F3\\u30C6\\u3067\\u304D\\u3066\\u306A\\u3044\\uFF09\\u3002\"}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/DeNA/ChainerPruner\",children:\"https://github.com/DeNA/ChainerPruner\"})})]})}function y(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,Object.assign({},i,{children:(0,e.jsx)(o,i)})):o(i)}var w=y;return b(j);})();\n;return Component;"},"_id":"posts/201902/distiller-thinning.mdx","_raw":{"sourceFilePath":"posts/201902/distiller-thinning.mdx","sourceFileName":"distiller-thinning.mdx","sourceFileDir":"posts/201902","contentType":"mdx","flattenedPath":"posts/201902/distiller-thinning"},"type":"Blog","readingTime":{"text":"3 min read","minutes":3,"time":180000,"words":600},"path":"posts/distiller-thinning","filePath":"posts/201902/distiller-thinning.mdx","toc":[]},"authorDetails":[{"name":"Tomohiro Kato / @tkat0","avatar":"/static/images/tkat0.jpg","occupation":"Softweare Engineer / Double Bassist","twitter":"https://twitter.com/_tkato_","linkedin":"https://www.linkedin.com/in/tkat0/","github":"https://github.com/tkat0","slug":"default","locale":"en","type":"Authors","readingTime":{"text":"3 min read","minutes":2.33,"time":139800,"words":466},"path":"posts/default","filePath":"authors/default.en.mdx","toc":[{"value":"2021-","url":"#2021-","depth":3},{"value":"2018-2020","url":"#2018-2020","depth":3},{"value":"2014-2017","url":"#2014-2017","depth":3},{"value":"Publications","url":"#publications","depth":3},{"value":"2022","url":"#2022","depth":4},{"value":"2021","url":"#2021","depth":4},{"value":"2020","url":"#2020","depth":4},{"value":"2019","url":"#2019","depth":4},{"value":"2018","url":"#2018","depth":4}],"tags":[]}],"prev":{"title":"Raspberry Pi 3 B+買ったよ","date":"2019-02-02T03:00:00.000Z","tags":["raspberry-pi"],"summary":"Raspberry Pi 3 B+を買ったので初期設定のメモ","slug":"setup-raspi","locale":"en","type":"Blog","readingTime":{"text":"1 min read","minutes":0.51,"time":30600,"words":102},"path":"posts/setup-raspi","filePath":"posts/201903/setup-raspi.mdx","toc":[]},"next":{"title":"いまさらONNXを調べた(v1.4.1)","date":"2019-02-02T04:00:01.000Z","tags":["onnx","deeplearning"],"summary":"ONNXは1年以上前から使ってるもののちゃんと仕様しらないな〜、だったので調べた。","slug":"learn-onnx","locale":"en","type":"Blog","readingTime":{"text":"6 min read","minutes":5.48,"time":328800,"words":1096},"path":"posts/learn-onnx","filePath":"posts/201902/learn-onnx.mdx","toc":[{"value":"onnx.proto","url":"#onnxproto","depth":2},{"value":"Versioning","url":"#versioning","depth":2},{"value":"ONNX Optimizer","url":"#onnx-optimizer","depth":2},{"value":"TypeDenotation","url":"#typedenotation","depth":2}]}},"__N_SSG":true}