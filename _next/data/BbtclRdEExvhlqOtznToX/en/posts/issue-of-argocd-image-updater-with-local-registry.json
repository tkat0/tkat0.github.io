{"pageProps":{"post":{"title":"argocd-image-updater didn't work with Local Docker Registry","date":"2023-01-06T09:00:00.000Z","tags":["kubernetes","argocd","docker","translated"],"draft":false,"summary":"There is a issue that argocd-image-updater cannot update images in Application that has multiple images of Local Docker Registry (e.g. 192.168.0.100:32000).\nIn conclusion, don't use registry names containing colon `:`.","slug":"issue-of-argocd-image-updater-with-local-registry","locale":"en","body":{"raw":"\n<ReadInAnotherLanguage />\n<TOCInline toc={props.toc} asDisclosure />\n<br />\n\n# Summary\n\nThere is a issue that [argocd-image-updater](https://github.com/argoproj-labs/argocd-image-updater) cannot update images in Application that has multiple images of Local Docker Registry (e.g. 192.168.0.100:32000).\nThis article is a brief note on the issue and its solution.\n\nIn conclusion, don't use registry names containing colon `:`.\n\nIf you want to know more details, please let me know in the comments. Note that I am still learning kubernetes, so there may be some errors.\n\n# Background\n\n- I run my hobby kubernetes environment on a local machine.\n- I run Docker Registry locally, not ECR or GCR.\n- I use tekton for CI and argocd for CD.\n- I wanted to use argocd-image-updater to automate updating images in manifests used by argocd.\n\n# Environment\n\n- kubernetes\n  - created by microk8s\n  - work on local machine\n- Container Registry\n  - Use local registry created by microk8s (`microk8s enable registry`)\n  - work on NodePort of kubernetes like 192.168.0.100:32000 (default configurations)\n- argocd\n  - v2.5.5+fc3eaec\n- argocd-image-updater\n  - v0.12.1\n\n# Issue\n\nThere is an issue with an Application that uses Kustomize with more than one Local Registry image, and only one image is updated.\n\nThis manifest is a configuration to automatically update the following two images to the latest version.\n\n- 192.168.0.100:32000/api-server\n- 192.168.0.100:32000/app\n\nWhen CI pushes an image, argocd-image-updater is expected to automatically deploy the latest image.\nThe argocd-image-updater logs and Events show two images are updated as expected, but the result is that only 192.168.0.100:32000/app is updated.\n\n```yaml\napiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: myapp\n  namespace: argocd\n  annotations:\n    argocd-image-updater.argoproj.io/image-list: 192.168.0.100:32000/api-server,192.168.0.100:32000/app\n\n    argocd-image-updater.argoproj.io/force-update: 'true'\n    argocd-image-updater.argoproj.io/update-strategy: latest\n    argocd-image-updater.argoproj.io/write-back-method: git\n    argocd-image-updater.argoproj.io/git-branch: main\n    argocd-image-updater.argoproj.io/write-back-target: kustomization\nspec:\n  project: myapp\n  source:\n    repoURL: git@github.com:tkat0/xxx.git\n    targetRevision: HEAD\n    path: kubernetes/myapp/development\n  syncPolicy:\n    automated:\n      prune: true\n      selfHeal: true\n  destination:\n    server: https://kubernetes.default.svc\n    namespace: default\n```\n\n# Solution\n\nYou can't use registry names containing colon `:`.\nTherefore, the following solutions are available.\n\n- Option1: Publish Local Registry with a URI that doesn't include a port, such as 192.168.0.101.\n  - Used this option in this time.\n- Option2: Use GCR, ECR or other registries.\n\nFor Option 1, it would be sufficient to simply set the service type of Local Registry to LoadBalancer so that it can be accessed directly with an address such as 192.168.0.101,\nbut I used Ingress to configure the Local Docker Registry as follows.\n\n- (required) Ingress exposes Service at `/`.\n- (required) nginx.ingress.kubernetes.io/proxy-body-size: \"0\"\n- (optional) Set my domain as host (cr.cluster.tkat0.dev)\n  - For convenience (note that this host is configured to resolve local cluster in LAN, not public)\n  - A wild card DNS such as https://sslip.io/ should work fine\n- (optional) Quit using microk8s registry and deploy another registry with helm\n  - To manage manifests with Git as much as possible\n\nHere is the manifest of Local Registry as above.\nI installed [twuni/docker-registry](https://github.com/twuni/docker-registry.helm) via argocd and helm, plus added Ingress.\n(Depending on the configuration of the helm chart, it may be possible to complete all of this only in Application resource.)\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: cr\n  namespace: ingress\n  annotations:\n    nginx.ingress.kubernetes.io/ssl-redirect: 'false'\n    # NOTE: 413 Request Entity Too Large:\n    # https://github.com/kubernetes/ingress-nginx/issues/4825#issuecomment-721911893\n    # https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md#custom-max-body-size\n    # 0 means no upper bound\n    nginx.ingress.kubernetes.io/proxy-body-size: '0'\nspec:\n  ingressClassName: nginx\n  rules:\n    - host: cr.cluster.tkat0.dev\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: docker-registry\n                port:\n                  number: 5000\n---\napiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: docker-registry\n  namespace: argocd\nspec:\n  project: default\n  source:\n    chart: docker-registry\n    # https://github.com/twuni/docker-registry.helm\n    repoURL: https://helm.twun.io\n    targetRevision: 2.2.2\n    helm:\n      releaseName: docker-registry\n      parameters:\n        - name: service.type\n          value: ClusterIP\n        - name: garbageCollect.enabled\n          value: 'true'\n        - name: persistence.size\n          value: 20Gi\n        - name: ingress.enabled\n          value: 'false'\n  syncPolicy:\n    automated:\n      prune: true\n      selfHeal: true\n    syncOptions:\n      - CreateNamespace=true\n  destination:\n    server: https://kubernetes.default.svc\n    namespace: docker-registry\n```\n\n# Cause\n\nThe cause is due to the implementation of argocd.\n\nWhen comparing Kustomize image names, argocd checks the image name up to first `:` as an identifier, so it incorrectly recognizes 192.168.0.100:32000/api-server and 192.168.0.100:32000/app as the same image (192.168.0.100).\n\nSpecifically, argocd-image-updater updates Application in [func SetKustomizeImage](https://pkg.go.dev/github.com/argoproj-labs/argocd-image-updater/pkg/argocd#SetKustomizeImage).\nA image should be added to Application each time this method is called.\n\nHowever, [func (\\*ApplicationSourceKustomize) MergeImage](https://pkg.go.dev/github.com/argoproj/argo-cd/v2@v2.2.7/pkg/apis/application/v1alpha1#ApplicationSourceKustomize.MergeImage)\nand [func (KustomizeImage) Match](https://pkg.go.dev/github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1#KustomizeImage.Match) overwrote the same image rather than added.\n\nThis is because, as mentioned above, if the image name is the same up to `:`, it is recognized as the same image.\n\nIn general, images such as gcr.io/project/image-1:v1.0 and gcr.io/project/image-2:v1.0 are recognized as different images, but this issue occurs in Local Registry that contains port number.\n\nI understand that including a colon in registry URI is not common, especially in a production environment,\nbut I could not find any documentation that says it should not be included as a specification (if anyone knows, please let me know).\n\nAt least, this documentation says including :8080 is fine.\n\nhttps://docs.docker.com/engine/reference/commandline/tag/\n\n> The hostname must comply with standard DNS rules, but may not contain underscores. If a hostname is present, it may optionally be followed by a port number If a hostname is present, it may optionally be followed by a port number `:8080`.\n\n# Conclusion\n\nThis article describes the issue I encountered with argocd-image-updater not working with Local Registry.\n\nI will organize the information and report to the community soon.\n\nupdate(Jan 7): reported here https://github.com/argoproj-labs/argocd-image-updater/issues/516\n\nThank you for reading.\n","code":"var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var g=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),y=(a,e)=>{for(var s in e)i(a,s,{get:e[s],enumerable:!0})},t=(a,e,s,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of m(e))!N.call(a,l)&&l!==s&&i(a,l,{get:()=>e[l],enumerable:!(c=u(e,l))||c.enumerable});return a};var b=(a,e,s)=>(s=a!=null?h(k(a)):{},t(e||!a||!a.__esModule?i(s,\"default\",{value:a,enumerable:!0}):s,a)),f=a=>t(i({},\"__esModule\",{value:!0}),a);var r=g((R,o)=>{o.exports=_jsx_runtime});var x={};y(x,{default:()=>I,frontmatter:()=>v});var n=b(r()),v={title:\"argocd-image-updater didn't work with Local Docker Registry\",date:new Date(16729956e5),slug:\"issue-of-argocd-image-updater-with-local-registry\",draft:!1,locale:\"en\",tags:[\"kubernetes\",\"argocd\",\"docker\",\"translated\"],summary:\"There is a issue that argocd-image-updater cannot update images in Application that has multiple images of Local Docker Registry (e.g. 192.168.0.100:32000).\\nIn conclusion, don't use registry names containing colon `:`.\"};function d(a){let e=Object.assign({h1:\"h1\",a:\"a\",span:\"span\",p:\"p\",code:\"code\",ul:\"ul\",li:\"li\",pre:\"pre\",blockquote:\"blockquote\"},a.components),{ReadInAnotherLanguage:s,TOCInline:c}=e;return s||p(\"ReadInAnotherLanguage\",!0),c||p(\"TOCInline\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s,{}),(0,n.jsx)(c,{toc:a.toc,asDisclosure:!0}),(0,n.jsx)(\"br\",{}),(0,n.jsxs)(e.h1,{id:\"summary\",children:[(0,n.jsx)(e.a,{href:\"#summary\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Summary\"]}),(0,n.jsxs)(e.p,{children:[\"There is a issue that \",(0,n.jsx)(e.a,{href:\"https://github.com/argoproj-labs/argocd-image-updater\",children:\"argocd-image-updater\"}),\" cannot update images in Application that has multiple images of Local Docker Registry (e.g. 192.168.0.100:32000). This article is a brief note on the issue and its solution.\"]}),(0,n.jsxs)(e.p,{children:[\"In conclusion, don't use registry names containing colon \",(0,n.jsx)(e.code,{children:\":\"}),\".\"]}),(0,n.jsx)(e.p,{children:\"If you want to know more details, please let me know in the comments. Note that I am still learning kubernetes, so there may be some errors.\"}),(0,n.jsxs)(e.h1,{id:\"background\",children:[(0,n.jsx)(e.a,{href:\"#background\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Background\"]}),(0,n.jsxs)(e.ul,{children:[(0,n.jsx)(e.li,{children:\"I run my hobby kubernetes environment on a local machine.\"}),(0,n.jsx)(e.li,{children:\"I run Docker Registry locally, not ECR or GCR.\"}),(0,n.jsx)(e.li,{children:\"I use tekton for CI and argocd for CD.\"}),(0,n.jsx)(e.li,{children:\"I wanted to use argocd-image-updater to automate updating images in manifests used by argocd.\"})]}),(0,n.jsxs)(e.h1,{id:\"environment\",children:[(0,n.jsx)(e.a,{href:\"#environment\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Environment\"]}),(0,n.jsxs)(e.ul,{children:[(0,n.jsxs)(e.li,{children:[\"kubernetes\",(0,n.jsxs)(e.ul,{children:[(0,n.jsx)(e.li,{children:\"created by microk8s\"}),(0,n.jsx)(e.li,{children:\"work on local machine\"})]})]}),(0,n.jsxs)(e.li,{children:[\"Container Registry\",(0,n.jsxs)(e.ul,{children:[(0,n.jsxs)(e.li,{children:[\"Use local registry created by microk8s (\",(0,n.jsx)(e.code,{children:\"microk8s enable registry\"}),\")\"]}),(0,n.jsx)(e.li,{children:\"work on NodePort of kubernetes like 192.168.0.100:32000 (default configurations)\"})]})]}),(0,n.jsxs)(e.li,{children:[\"argocd\",(0,n.jsx)(e.ul,{children:(0,n.jsx)(e.li,{children:\"v2.5.5+fc3eaec\"})})]}),(0,n.jsxs)(e.li,{children:[\"argocd-image-updater\",(0,n.jsx)(e.ul,{children:(0,n.jsx)(e.li,{children:\"v0.12.1\"})})]})]}),(0,n.jsxs)(e.h1,{id:\"issue\",children:[(0,n.jsx)(e.a,{href:\"#issue\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Issue\"]}),(0,n.jsx)(e.p,{children:\"There is an issue with an Application that uses Kustomize with more than one Local Registry image, and only one image is updated.\"}),(0,n.jsx)(e.p,{children:\"This manifest is a configuration to automatically update the following two images to the latest version.\"}),(0,n.jsxs)(e.ul,{children:[(0,n.jsx)(e.li,{children:\"192.168.0.100:32000/api-server\"}),(0,n.jsx)(e.li,{children:\"192.168.0.100:32000/app\"})]}),(0,n.jsx)(e.p,{children:\"When CI pushes an image, argocd-image-updater is expected to automatically deploy the latest image. The argocd-image-updater logs and Events show two images are updated as expected, but the result is that only 192.168.0.100:32000/app is updated.\"}),(0,n.jsx)(e.pre,{className:\"language-yaml\",children:(0,n.jsxs)(e.code,{className:\"language-yaml code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"apiVersion\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` argoproj.io/v1alpha1\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"kind\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` Application\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"metadata\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` myapp\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"namespace\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` argocd\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"annotations\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"argocd-image-updater.argoproj.io/image-list\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" 192.168.0.100\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\"32000/api\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\"server\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\"192.168.0.100\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`32000/app\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"argocd-image-updater.argoproj.io/force-update\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'true'\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"argocd-image-updater.argoproj.io/update-strategy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` latest\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"argocd-image-updater.argoproj.io/write-back-method\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` git\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"argocd-image-updater.argoproj.io/git-branch\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` main\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"argocd-image-updater.argoproj.io/write-back-target\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` kustomization\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"spec\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"project\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` myapp\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"source\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"repoURL\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" git@github.com\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`tkat0/xxx.git\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"targetRevision\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` HEAD\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"path\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` kubernetes/myapp/development\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"syncPolicy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"automated\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"prune\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean important\",children:\"true\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"selfHeal\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean important\",children:\"true\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"destination\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"server\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" https\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`//kubernetes.default.svc\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"namespace\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` default\n`]})]})}),(0,n.jsxs)(e.h1,{id:\"solution\",children:[(0,n.jsx)(e.a,{href:\"#solution\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Solution\"]}),(0,n.jsxs)(e.p,{children:[\"You can't use registry names containing colon \",(0,n.jsx)(e.code,{children:\":\"}),\". Therefore, the following solutions are available.\"]}),(0,n.jsxs)(e.ul,{children:[(0,n.jsxs)(e.li,{children:[\"Option1: Publish Local Registry with a URI that doesn't include a port, such as 192.168.0.101.\",(0,n.jsx)(e.ul,{children:(0,n.jsx)(e.li,{children:\"Used this option in this time.\"})})]}),(0,n.jsx)(e.li,{children:\"Option2: Use GCR, ECR or other registries.\"})]}),(0,n.jsx)(e.p,{children:\"For Option 1, it would be sufficient to simply set the service type of Local Registry to LoadBalancer so that it can be accessed directly with an address such as 192.168.0.101, but I used Ingress to configure the Local Docker Registry as follows.\"}),(0,n.jsxs)(e.ul,{children:[(0,n.jsxs)(e.li,{children:[\"(required) Ingress exposes Service at \",(0,n.jsx)(e.code,{children:\"/\"}),\".\"]}),(0,n.jsx)(e.li,{children:'(required) nginx.ingress.kubernetes.io/proxy-body-size: \"0\"'}),(0,n.jsxs)(e.li,{children:[\"(optional) Set my domain as host (cr.cluster.tkat0.dev)\",(0,n.jsxs)(e.ul,{children:[(0,n.jsx)(e.li,{children:\"For convenience (note that this host is configured to resolve local cluster in LAN, not public)\"}),(0,n.jsxs)(e.li,{children:[\"A wild card DNS such as \",(0,n.jsx)(e.a,{href:\"https://sslip.io/\",children:\"https://sslip.io/\"}),\" should work fine\"]})]})]}),(0,n.jsxs)(e.li,{children:[\"(optional) Quit using microk8s registry and deploy another registry with helm\",(0,n.jsx)(e.ul,{children:(0,n.jsx)(e.li,{children:\"To manage manifests with Git as much as possible\"})})]})]}),(0,n.jsxs)(e.p,{children:[\"Here is the manifest of Local Registry as above. I installed \",(0,n.jsx)(e.a,{href:\"https://github.com/twuni/docker-registry.helm\",children:\"twuni/docker-registry\"}),\" via argocd and helm, plus added Ingress. (Depending on the configuration of the helm chart, it may be possible to complete all of this only in Application resource.)\"]}),(0,n.jsx)(e.pre,{className:\"language-yaml\",children:(0,n.jsxs)(e.code,{className:\"language-yaml code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"apiVersion\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` networking.k8s.io/v1\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"kind\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` Ingress\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"metadata\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` cr\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"namespace\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` ingress\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"annotations\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"nginx.ingress.kubernetes.io/ssl-redirect\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'false'\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# NOTE: 413 Request Entity Too Large:\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# https://github.com/kubernetes/ingress-nginx/issues/4825#issuecomment-721911893\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md#custom-max-body-size\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# 0 means no upper bound\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"nginx.ingress.kubernetes.io/proxy-body-size\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'0'\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"spec\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"ingressClassName\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` nginx\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"rules\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"host\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` cr.cluster.tkat0.dev\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"http\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"paths\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"path\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` /\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"pathType\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` Prefix\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"            \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"backend\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"              \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"service\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"                \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" docker\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),`registry\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"                \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"port\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"                  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"number\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"5000\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"---\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"apiVersion\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` argoproj.io/v1alpha1\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"kind\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` Application\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"metadata\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" docker\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),`registry\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"namespace\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` argocd\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"spec\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"project\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` default\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"source\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"chart\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" docker\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),`registry\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# https://github.com/twuni/docker-registry.helm\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"repoURL\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" https\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`//helm.twun.io\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"targetRevision\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` 2.2.2\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"helm\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"releaseName\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" docker\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),`registry\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"parameters\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` service.type\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"value\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` ClusterIP\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` garbageCollect.enabled\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"value\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'true'\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` persistence.size\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"value\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` 20Gi\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),\" \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"name\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` ingress.enabled\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"          \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"value\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'false'\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"syncPolicy\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"automated\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"prune\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean important\",children:\"true\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"selfHeal\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean important\",children:\"true\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"syncOptions\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"      \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),` CreateNamespace=true\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"  \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"destination\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"server\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" https\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`//kubernetes.default.svc\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token atrule key\",children:\"namespace\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" docker\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"-\"}),`registry\n`]})]})}),(0,n.jsxs)(e.h1,{id:\"cause\",children:[(0,n.jsx)(e.a,{href:\"#cause\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Cause\"]}),(0,n.jsx)(e.p,{children:\"The cause is due to the implementation of argocd.\"}),(0,n.jsxs)(e.p,{children:[\"When comparing Kustomize image names, argocd checks the image name up to first \",(0,n.jsx)(e.code,{children:\":\"}),\" as an identifier, so it incorrectly recognizes 192.168.0.100:32000/api-server and 192.168.0.100:32000/app as the same image (192.168.0.100).\"]}),(0,n.jsxs)(e.p,{children:[\"Specifically, argocd-image-updater updates Application in \",(0,n.jsx)(e.a,{href:\"https://pkg.go.dev/github.com/argoproj-labs/argocd-image-updater/pkg/argocd#SetKustomizeImage\",children:\"func SetKustomizeImage\"}),\". A image should be added to Application each time this method is called.\"]}),(0,n.jsxs)(e.p,{children:[\"However, \",(0,n.jsx)(e.a,{href:\"https://pkg.go.dev/github.com/argoproj/argo-cd/v2@v2.2.7/pkg/apis/application/v1alpha1#ApplicationSourceKustomize.MergeImage\",children:\"func (*ApplicationSourceKustomize) MergeImage\"}),\" and \",(0,n.jsx)(e.a,{href:\"https://pkg.go.dev/github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1#KustomizeImage.Match\",children:\"func (KustomizeImage) Match\"}),\" overwrote the same image rather than added.\"]}),(0,n.jsxs)(e.p,{children:[\"This is because, as mentioned above, if the image name is the same up to \",(0,n.jsx)(e.code,{children:\":\"}),\", it is recognized as the same image.\"]}),(0,n.jsx)(e.p,{children:\"In general, images such as gcr.io/project/image-1:v1.0 and gcr.io/project/image-2:v1.0 are recognized as different images, but this issue occurs in Local Registry that contains port number.\"}),(0,n.jsx)(e.p,{children:\"I understand that including a colon in registry URI is not common, especially in a production environment, but I could not find any documentation that says it should not be included as a specification (if anyone knows, please let me know).\"}),(0,n.jsx)(e.p,{children:\"At least, this documentation says including :8080 is fine.\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://docs.docker.com/engine/reference/commandline/tag/\",children:\"https://docs.docker.com/engine/reference/commandline/tag/\"})}),(0,n.jsx)(e.blockquote,{children:(0,n.jsxs)(e.p,{children:[\"The hostname must comply with standard DNS rules, but may not contain underscores. If a hostname is present, it may optionally be followed by a port number If a hostname is present, it may optionally be followed by a port number \",(0,n.jsx)(e.code,{children:\":8080\"}),\".\"]})}),(0,n.jsxs)(e.h1,{id:\"conclusion\",children:[(0,n.jsx)(e.a,{href:\"#conclusion\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Conclusion\"]}),(0,n.jsx)(e.p,{children:\"This article describes the issue I encountered with argocd-image-updater not working with Local Registry.\"}),(0,n.jsx)(e.p,{children:\"I will organize the information and report to the community soon.\"}),(0,n.jsxs)(e.p,{children:[\"update(Jan 7): reported here \",(0,n.jsx)(e.a,{href:\"https://github.com/argoproj-labs/argocd-image-updater/issues/516\",children:\"https://github.com/argoproj-labs/argocd-image-updater/issues/516\"})]}),(0,n.jsx)(e.p,{children:\"Thank you for reading.\"})]})}function w(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,Object.assign({},a,{children:(0,n.jsx)(d,a)})):d(a)}var I=w;function p(a,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return f(x);})();\n;return Component;"},"_id":"posts/202301/issue-of-argocd-image-updater-with-local-registry/index.en.mdx","_raw":{"sourceFilePath":"posts/202301/issue-of-argocd-image-updater-with-local-registry/index.en.mdx","sourceFileName":"index.en.mdx","sourceFileDir":"posts/202301/issue-of-argocd-image-updater-with-local-registry","contentType":"mdx","flattenedPath":"posts/202301/issue-of-argocd-image-updater-with-local-registry/index.en"},"type":"Blog","readingTime":{"text":"5 min read","minutes":4.305,"time":258300,"words":861},"path":"posts/issue-of-argocd-image-updater-with-local-registry","filePath":"posts/202301/issue-of-argocd-image-updater-with-local-registry/index.en.mdx","toc":[{"value":"Summary","url":"#summary","depth":1},{"value":"Background","url":"#background","depth":1},{"value":"Environment","url":"#environment","depth":1},{"value":"Issue","url":"#issue","depth":1},{"value":"Solution","url":"#solution","depth":1},{"value":"Cause","url":"#cause","depth":1},{"value":"Conclusion","url":"#conclusion","depth":1}]},"authorDetails":[{"name":"Tomohiro Kato / @tkat0","avatar":"/static/images/tkat0.jpg","occupation":"Softweare Engineer / Double Bassist","twitter":"https://twitter.com/_tkato_","linkedin":"https://www.linkedin.com/in/tkat0/","github":"https://github.com/tkat0","slug":"default","locale":"en","type":"Authors","readingTime":{"text":"3 min read","minutes":2.33,"time":139800,"words":466},"path":"posts/default","filePath":"authors/default.en.mdx","toc":[{"value":"2021-","url":"#2021-","depth":3},{"value":"2018-2020","url":"#2018-2020","depth":3},{"value":"2014-2017","url":"#2014-2017","depth":3},{"value":"Publications","url":"#publications","depth":3},{"value":"2022","url":"#2022","depth":4},{"value":"2021","url":"#2021","depth":4},{"value":"2020","url":"#2020","depth":4},{"value":"2019","url":"#2019","depth":4},{"value":"2018","url":"#2018","depth":4}],"tags":[]}],"prev":{"title":"Looking back on 2022","date":"2022-12-29T09:00:00.000Z","tags":["yearly-review","translated"],"draft":false,"summary":"Looking back on 2022.","slug":"2022-review","locale":"en","type":"Blog","readingTime":{"text":"3 min read","minutes":2.64,"time":158400,"words":528},"path":"posts/2022-review","filePath":"posts/202212/2022-review.en.mdx","toc":[{"value":"Involved in product development","url":"#involved-in-product-development","depth":1},{"value":"Learned more platforms","url":"#learned-more-platforms","depth":1},{"value":"Looking back on my career","url":"#looking-back-on-my-career","depth":1},{"value":"Conclusion","url":"#conclusion","depth":1}]},"next":{"title":"ChatGPTについて調べた","date":"2023-03-12T13:00:00.000Z","tags":["chatgpt"],"lastmod":"2023-03-19T23:00:00.000Z","draft":false,"summary":"ChatGPTについて調べたことを随時更新するページです。","slug":"chatgpt","locale":"en","type":"Blog","readingTime":{"text":"11 min read","minutes":10.53,"time":631800,"words":2106},"path":"posts/chatgpt","filePath":"posts/202303/chatgpt/index.mdx","toc":[{"value":"ChatGPT とは","url":"#chatgpt-とは","depth":1},{"value":"Limitations/Issues","url":"#limitationsissues","depth":1},{"value":"利用形態","url":"#利用形態","depth":1},{"value":"ChatGPT API","url":"#chatgpt-api","depth":2},{"value":"応用プロダクト","url":"#応用プロダクト","depth":1},{"value":"その他応用","url":"#その他応用","depth":1},{"value":"どのようにプロダクトに応用するのか","url":"#どのようにプロダクトに応用するのか","depth":1},{"value":"UI デザイン","url":"#ui-デザイン","depth":2},{"value":"プロンプトデザイン","url":"#プロンプトデザイン","depth":2},{"value":"Alternative","url":"#alternative","depth":1},{"value":"どう ChatGPT と接するか","url":"#どう-chatgpt-と接するか","depth":1},{"value":"その他","url":"#その他","depth":1},{"value":"References","url":"#references","depth":1}]}},"__N_SSG":true}