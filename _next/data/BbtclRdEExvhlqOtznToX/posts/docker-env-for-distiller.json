{"pageProps":{"post":{"title":"Distillerの検証環境をDockerで作った","date":"2019-02-22T02:00:00.000Z","tags":["distiller","pytorch","docker","deeplearning","pruning"],"summary":"PyTorch向けの軽量化ライブラリであるDistillerを触る環境をDockerで作っただけの話","slug":"docker-env-for-distiller","locale":"ja","body":{"raw":"\nPyTorch 向けの軽量化ライブラリである[Distiller](https://github.com/NervanaSystems/distiller)を触る環境を Docker で作っただけの話\n\n過去に記事をかいた。\n\n[Distiller で DeepLearning のモデルを軽量化: Gradual Pruning 編 - tkato’s blog](http://tkat0.hateblo.jp/entry/2018/05/22/082911I)\n\nFPGA の部屋の[@marsee101](https://twitter.com/marsee101)さんが、ありがたい事に記事を読んで試してくださった。が、うまくうごかないそう。 結論から言うと設定の yaml ファイルが今の Distiller だと動かないみたいで、修正したら動いた。\n\nhttps://twitter.com/_tkato_/status/1098310005676138501\nhttps://twitter.com/_tkato_/status/1097975452126216192\n\n今回は、Distiller で遊べる Docker 環境を作ってみた。 某 Web 系企業で鍛えられたので、Docker で検証環境を立ち上げて試行錯誤するのも慣れてきた。\n\nhttps://github.com/tkat0/testing-distiller\n\n似たようなもので tvm の遊べる環境も作ってる。\n\nhttps://github.com/tkat0/tvm-playground\n\nちょっとした自慢である。\n\n![](/static/images/201902/docker-env-for-distiller/star.png)\n\n環境構築は、以下。\n\nDistiller を clone して Python パスを通した Docker コンテナを立ち上げて、そこに bash でログインしている。\n\nちょっとした検証用なので Python の base image を使ってるので GPU では動かない点に注意。\n\n```bash\n$ docker-compose up -d cpu\n$ docker-compose exec cpu bash\n```\n\n実験中はコンテナで複数プロセスを実行する事が多い（学習プロセスや tensorboard など）ので、上記のように docker-compose up -d で立ち上げて、 docker-compose exec で bash を生やして作業することが多い。\n\n以前書いたブログ相当の学習実行は以下。\n\nDistiller の examples を自身のリポジトリにコピーして使ってる。\n\nまずは pretraining\n\n```bash\nroot@1aff972ccdde:/work# cd examples/classifier_compression\nroot@1aff972ccdde:/work/examples/classifier_compression# python compress_classifier.py --arch simplenet_cifar ../../dataset/data.cifar10 -p 30 -j=1 --lr=0.01\n```\n\nそして pruning しながら fine-tuning\n\n```bash\nroot@1aff972ccdde:/work/examples/classifier_compression# python compress_classifier.py --arch simplenet_cifar work/dataset/data.cifar10 -p 50 --lr=0.001 --epochs=200 --resume=simplenet_cifar/best.pth.tar --compress=simplenet_cifar.schedule_agp.yaml\n```\n\nどうやら以前書いた simplenet_cifar.schedule_agp.yaml だと現状動かないようだった。ちゃんと追ってないけど、以下でうまく動いているっぽい。\n\n以下の修正。\n\nhttps://github.com/tkat0/testing-distiller/commit/c4f9d22258d5659fd8e7804b5576622ab62cfccb?diff=unified\n\n![](/static/images/201902/docker-env-for-distiller/sparsity.png)\n\nDistiller、pip install でインストールできるとありがたいんだけどな…\n","code":"var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var u=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),k=(i,e)=>{for(var c in e)r(i,c,{get:e[c],enumerable:!0})},n=(i,e,c,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of m(e))!f.call(i,s)&&s!==c&&r(i,s,{get:()=>e[s],enumerable:!(a=p(e,s))||a.enumerable});return i};var b=(i,e,c)=>(c=i!=null?h(g(i)):{},n(e||!i||!i.__esModule?r(c,\"default\",{value:i,enumerable:!0}):c,i)),_=i=>n(r({},\"__esModule\",{value:!0}),i);var o=u((j,l)=>{l.exports=_jsx_runtime});var w={};k(w,{default:()=>D,frontmatter:()=>y});var t=b(o()),y={title:\"Distiller\\u306E\\u691C\\u8A3C\\u74B0\\u5883\\u3092Docker\\u3067\\u4F5C\\u3063\\u305F\",date:new Date(15508008e5),slug:\"docker-env-for-distiller\",tags:[\"distiller\",\"pytorch\",\"docker\",\"deeplearning\",\"pruning\"],summary:\"PyTorch\\u5411\\u3051\\u306E\\u8EFD\\u91CF\\u5316\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3067\\u3042\\u308BDistiller\\u3092\\u89E6\\u308B\\u74B0\\u5883\\u3092Docker\\u3067\\u4F5C\\u3063\\u305F\\u3060\\u3051\\u306E\\u8A71\"};function d(i){let e=Object.assign({p:\"p\",a:\"a\",div:\"div\",pre:\"pre\",code:\"code\",span:\"span\"},i.components),{Image:c}=e;return c||x(\"Image\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"PyTorch \\u5411\\u3051\\u306E\\u8EFD\\u91CF\\u5316\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3067\\u3042\\u308B\",(0,t.jsx)(e.a,{href:\"https://github.com/NervanaSystems/distiller\",children:\"Distiller\"}),\"\\u3092\\u89E6\\u308B\\u74B0\\u5883\\u3092 Docker \\u3067\\u4F5C\\u3063\\u305F\\u3060\\u3051\\u306E\\u8A71\"]}),(0,t.jsx)(e.p,{children:\"\\u904E\\u53BB\\u306B\\u8A18\\u4E8B\\u3092\\u304B\\u3044\\u305F\\u3002\"}),(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:\"http://tkat0.hateblo.jp/entry/2018/05/22/082911I\",children:\"Distiller \\u3067 DeepLearning \\u306E\\u30E2\\u30C7\\u30EB\\u3092\\u8EFD\\u91CF\\u5316: Gradual Pruning \\u7DE8 - tkato\\u2019s blog\"})}),(0,t.jsxs)(e.p,{children:[\"FPGA \\u306E\\u90E8\\u5C4B\\u306E\",(0,t.jsx)(e.a,{href:\"https://twitter.com/marsee101\",children:\"@marsee101\"}),\"\\u3055\\u3093\\u304C\\u3001\\u3042\\u308A\\u304C\\u305F\\u3044\\u4E8B\\u306B\\u8A18\\u4E8B\\u3092\\u8AAD\\u3093\\u3067\\u8A66\\u3057\\u3066\\u304F\\u3060\\u3055\\u3063\\u305F\\u3002\\u304C\\u3001\\u3046\\u307E\\u304F\\u3046\\u3054\\u304B\\u306A\\u3044\\u305D\\u3046\\u3002 \\u7D50\\u8AD6\\u304B\\u3089\\u8A00\\u3046\\u3068\\u8A2D\\u5B9A\\u306E yaml \\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u4ECA\\u306E Distiller \\u3060\\u3068\\u52D5\\u304B\\u306A\\u3044\\u307F\\u305F\\u3044\\u3067\\u3001\\u4FEE\\u6B63\\u3057\\u305F\\u3089\\u52D5\\u3044\\u305F\\u3002\"]}),(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.a,{href:\"https://twitter.com/_tkato_/status/1098310005676138501\",children:\"https://twitter.com/_tkato_/status/1098310005676138501\"}),\" \",(0,t.jsx)(e.a,{href:\"https://twitter.com/_tkato_/status/1097975452126216192\",children:\"https://twitter.com/_tkato_/status/1097975452126216192\"})]}),(0,t.jsx)(e.p,{children:\"\\u4ECA\\u56DE\\u306F\\u3001Distiller \\u3067\\u904A\\u3079\\u308B Docker \\u74B0\\u5883\\u3092\\u4F5C\\u3063\\u3066\\u307F\\u305F\\u3002 \\u67D0 Web \\u7CFB\\u4F01\\u696D\\u3067\\u935B\\u3048\\u3089\\u308C\\u305F\\u306E\\u3067\\u3001Docker \\u3067\\u691C\\u8A3C\\u74B0\\u5883\\u3092\\u7ACB\\u3061\\u4E0A\\u3052\\u3066\\u8A66\\u884C\\u932F\\u8AA4\\u3059\\u308B\\u306E\\u3082\\u6163\\u308C\\u3066\\u304D\\u305F\\u3002\"}),(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:\"https://github.com/tkat0/testing-distiller\",children:\"https://github.com/tkat0/testing-distiller\"})}),(0,t.jsx)(e.p,{children:\"\\u4F3C\\u305F\\u3088\\u3046\\u306A\\u3082\\u306E\\u3067 tvm \\u306E\\u904A\\u3079\\u308B\\u74B0\\u5883\\u3082\\u4F5C\\u3063\\u3066\\u308B\\u3002\"}),(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:\"https://github.com/tkat0/tvm-playground\",children:\"https://github.com/tkat0/tvm-playground\"})}),(0,t.jsx)(e.p,{children:\"\\u3061\\u3087\\u3063\\u3068\\u3057\\u305F\\u81EA\\u6162\\u3067\\u3042\\u308B\\u3002\"}),(0,t.jsx)(e.div,{children:(0,t.jsx)(c,{alt:\"\",src:\"/static/images/201902/docker-env-for-distiller/star.png\",width:\"1173\",height:\"630\"})}),(0,t.jsx)(e.p,{children:\"\\u74B0\\u5883\\u69CB\\u7BC9\\u306F\\u3001\\u4EE5\\u4E0B\\u3002\"}),(0,t.jsx)(e.p,{children:\"Distiller \\u3092 clone \\u3057\\u3066 Python \\u30D1\\u30B9\\u3092\\u901A\\u3057\\u305F Docker \\u30B3\\u30F3\\u30C6\\u30CA\\u3092\\u7ACB\\u3061\\u4E0A\\u3052\\u3066\\u3001\\u305D\\u3053\\u306B bash \\u3067\\u30ED\\u30B0\\u30A4\\u30F3\\u3057\\u3066\\u3044\\u308B\\u3002\"}),(0,t.jsx)(e.p,{children:\"\\u3061\\u3087\\u3063\\u3068\\u3057\\u305F\\u691C\\u8A3C\\u7528\\u306A\\u306E\\u3067 Python \\u306E base image \\u3092\\u4F7F\\u3063\\u3066\\u308B\\u306E\\u3067 GPU \\u3067\\u306F\\u52D5\\u304B\\u306A\\u3044\\u70B9\\u306B\\u6CE8\\u610F\\u3002\"}),(0,t.jsx)(e.pre,{className:\"language-bash\",children:(0,t.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,t.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,t.jsx)(e.span,{className:\"token function\",children:\"docker-compose\"}),\" up \",(0,t.jsx)(e.span,{className:\"token parameter variable\",children:\"-d\"}),` cpu\n`]}),(0,t.jsxs)(e.span,{className:\"code-line\",children:[\"$ \",(0,t.jsx)(e.span,{className:\"token function\",children:\"docker-compose\"}),\" \",(0,t.jsx)(e.span,{className:\"token builtin class-name\",children:\"exec\"}),\" cpu \",(0,t.jsx)(e.span,{className:\"token function\",children:\"bash\"}),`\n`]})]})}),(0,t.jsx)(e.p,{children:\"\\u5B9F\\u9A13\\u4E2D\\u306F\\u30B3\\u30F3\\u30C6\\u30CA\\u3067\\u8907\\u6570\\u30D7\\u30ED\\u30BB\\u30B9\\u3092\\u5B9F\\u884C\\u3059\\u308B\\u4E8B\\u304C\\u591A\\u3044\\uFF08\\u5B66\\u7FD2\\u30D7\\u30ED\\u30BB\\u30B9\\u3084 tensorboard \\u306A\\u3069\\uFF09\\u306E\\u3067\\u3001\\u4E0A\\u8A18\\u306E\\u3088\\u3046\\u306B docker-compose up -d \\u3067\\u7ACB\\u3061\\u4E0A\\u3052\\u3066\\u3001 docker-compose exec \\u3067 bash \\u3092\\u751F\\u3084\\u3057\\u3066\\u4F5C\\u696D\\u3059\\u308B\\u3053\\u3068\\u304C\\u591A\\u3044\\u3002\"}),(0,t.jsx)(e.p,{children:\"\\u4EE5\\u524D\\u66F8\\u3044\\u305F\\u30D6\\u30ED\\u30B0\\u76F8\\u5F53\\u306E\\u5B66\\u7FD2\\u5B9F\\u884C\\u306F\\u4EE5\\u4E0B\\u3002\"}),(0,t.jsx)(e.p,{children:\"Distiller \\u306E examples \\u3092\\u81EA\\u8EAB\\u306E\\u30EA\\u30DD\\u30B8\\u30C8\\u30EA\\u306B\\u30B3\\u30D4\\u30FC\\u3057\\u3066\\u4F7F\\u3063\\u3066\\u308B\\u3002\"}),(0,t.jsx)(e.p,{children:\"\\u307E\\u305A\\u306F pretraining\"}),(0,t.jsx)(e.pre,{className:\"language-bash\",children:(0,t.jsxs)(e.code,{className:\"language-bash code-highlight\",children:[(0,t.jsxs)(e.span,{className:\"code-line\",children:[\"root@1aff972ccdde:/work\",(0,t.jsx)(e.span,{className:\"token comment\",children:\"# cd examples/classifier_compression\"}),`\n`]}),(0,t.jsxs)(e.span,{className:\"code-line\",children:[\"root@1aff972ccdde:/work/examples/classifier_compression\",(0,t.jsx)(e.span,{className:\"token comment\",children:\"# python compress_classifier.py --arch simplenet_cifar ../../dataset/data.cifar10 -p 30 -j=1 --lr=0.01\"}),`\n`]})]})}),(0,t.jsx)(e.p,{children:\"\\u305D\\u3057\\u3066 pruning \\u3057\\u306A\\u304C\\u3089 fine-tuning\"}),(0,t.jsx)(e.pre,{className:\"language-bash\",children:(0,t.jsx)(e.code,{className:\"language-bash code-highlight\",children:(0,t.jsxs)(e.span,{className:\"code-line\",children:[\"root@1aff972ccdde:/work/examples/classifier_compression\",(0,t.jsx)(e.span,{className:\"token comment\",children:\"# python compress_classifier.py --arch simplenet_cifar work/dataset/data.cifar10 -p 50 --lr=0.001 --epochs=200 --resume=simplenet_cifar/best.pth.tar --compress=simplenet_cifar.schedule_agp.yaml\"}),`\n`]})})}),(0,t.jsx)(e.p,{children:\"\\u3069\\u3046\\u3084\\u3089\\u4EE5\\u524D\\u66F8\\u3044\\u305F simplenet_cifar.schedule_agp.yaml \\u3060\\u3068\\u73FE\\u72B6\\u52D5\\u304B\\u306A\\u3044\\u3088\\u3046\\u3060\\u3063\\u305F\\u3002\\u3061\\u3083\\u3093\\u3068\\u8FFD\\u3063\\u3066\\u306A\\u3044\\u3051\\u3069\\u3001\\u4EE5\\u4E0B\\u3067\\u3046\\u307E\\u304F\\u52D5\\u3044\\u3066\\u3044\\u308B\\u3063\\u307D\\u3044\\u3002\"}),(0,t.jsx)(e.p,{children:\"\\u4EE5\\u4E0B\\u306E\\u4FEE\\u6B63\\u3002\"}),(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:\"https://github.com/tkat0/testing-distiller/commit/c4f9d22258d5659fd8e7804b5576622ab62cfccb?diff=unified\",children:\"https://github.com/tkat0/testing-distiller/commit/c4f9d22258d5659fd8e7804b5576622ab62cfccb?diff=unified\"})}),(0,t.jsx)(e.div,{children:(0,t.jsx)(c,{alt:\"\",src:\"/static/images/201902/docker-env-for-distiller/sparsity.png\",width:\"644\",height:\"781\"})}),(0,t.jsx)(e.p,{children:\"Distiller\\u3001pip install \\u3067\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3067\\u304D\\u308B\\u3068\\u3042\\u308A\\u304C\\u305F\\u3044\\u3093\\u3060\\u3051\\u3069\\u306A\\u2026\"})]})}function N(i={}){let{wrapper:e}=i.components||{};return e?(0,t.jsx)(e,Object.assign({},i,{children:(0,t.jsx)(d,i)})):d(i)}var D=N;function x(i,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+i+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return _(w);})();\n;return Component;"},"_id":"posts/201902/docker-env-for-distiller/index.mdx","_raw":{"sourceFilePath":"posts/201902/docker-env-for-distiller/index.mdx","sourceFileName":"index.mdx","sourceFileDir":"posts/201902/docker-env-for-distiller","contentType":"mdx","flattenedPath":"posts/201902/docker-env-for-distiller"},"type":"Blog","readingTime":{"text":"3 min read","minutes":2.53,"time":151800,"words":506},"path":"posts/docker-env-for-distiller","filePath":"posts/201902/docker-env-for-distiller/index.mdx","toc":[]},"authorDetails":[{"name":"Tomohiro Kato / @tkat0","avatar":"/static/images/tkat0.jpg","occupation":"Softweare Engineer / Double Bassist","twitter":"https://twitter.com/_tkato_","linkedin":"https://www.linkedin.com/in/tkat0/","github":"https://github.com/tkat0","slug":"default","locale":"en","type":"Authors","readingTime":{"text":"3 min read","minutes":2.33,"time":139800,"words":466},"path":"posts/default","filePath":"authors/default.en.mdx","toc":[{"value":"2021-","url":"#2021-","depth":3},{"value":"2018-2020","url":"#2018-2020","depth":3},{"value":"2014-2017","url":"#2014-2017","depth":3},{"value":"Publications","url":"#publications","depth":3},{"value":"2022","url":"#2022","depth":4},{"value":"2021","url":"#2021","depth":4},{"value":"2020","url":"#2020","depth":4},{"value":"2019","url":"#2019","depth":4},{"value":"2018","url":"#2018","depth":4}],"tags":[]}],"prev":{"title":"Chainer-compiler調査（2）","date":"2019-02-06T00:30:00.000Z","tags":["chainer-compiler","deeplearning","chainer"],"summary":"Chainer-compilerの調査その2","slug":"learn-chainer-compiler-2","locale":"ja","type":"Blog","readingTime":{"text":"3 min read","minutes":2.515,"time":150900,"words":503},"path":"posts/learn-chainer-compiler-2","filePath":"posts/201902/learn-chainer-compiler-2.mdx","toc":[{"value":"examples/train_mnist.py","url":"#examplestrain_mnistpy","depth":2},{"value":"CompiledModel#forward","url":"#compiledmodelforward","depth":2},{"value":"CompiledModel#compile","url":"#compiledmodelcompile","depth":2},{"value":"RunCompiledModel#forward","url":"#runcompiledmodelforward","depth":2},{"value":"その他","url":"#その他","depth":2}]},"next":{"title":"ONNXRuntime調査","date":"2019-05-22T00:00:00.000Z","tags":["onnxruntime","deeplearning","onnx","tvm"],"summary":"ONNXモデルの推論エンジン。TensorRTのpreviewが出ると。この機会にちょっと調べる。","slug":"read-onnxruntime","locale":"ja","type":"Blog","readingTime":{"text":"2 min read","minutes":1.945,"time":116700,"words":389},"path":"posts/read-onnxruntime","filePath":"posts/201903/read-onnxruntime.mdx","toc":[{"value":"Usage","url":"#usage","depth":2},{"value":"Design and Key Features","url":"#design-and-key-features","depth":2},{"value":"その他 1","url":"#その他-1","depth":2},{"value":"その他 2","url":"#その他-2","depth":2}]}},"__N_SSG":true}