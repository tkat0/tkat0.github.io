.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_tutorials_frontend_from_onnx.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_frontend_from_onnx.py:


Compile ONNX Models
===================
**Author**: `Joshua Z. Zhang <https://zhreshold.github.io/>`_

This article is an introductory tutorial to deploy ONNX models with Relay.

For us to begin with, ONNX package must be installed.

A quick solution is to install protobuf compiler, and

.. code-block:: bash

    pip install onnx --user

or please refer to offical site.
https://github.com/onnx/onnx



.. code-block:: python

    import onnx
    import numpy as np
    import tvm
    import tvm.relay as relay
    from tvm.contrib.download import download_testdata







Load pretrained ONNX model
---------------------------------------------
The example super resolution model used here is exactly the same model in onnx tutorial
http://pytorch.org/tutorials/advanced/super_resolution_with_caffe2.html
we skip the pytorch model construction part, and download the saved onnx model



.. code-block:: python

    model_url = ''.join(['https://gist.github.com/zhreshold/',
                         'bcda4716699ac97ea44f791c24310193/raw/',
                         '93672b029103648953c4e5ad3ac3aadf346a4cdc/',
                         'super_resolution_0.2.onnx'])
    model_path = download_testdata(model_url, 'super_resolution.onnx', module='onnx')
    # now you have super_resolution.onnx on disk
    onnx_model = onnx.load(model_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    File /workspace/.tvm_test_data/onnx/super_resolution.onnx exists, skip.


Load a test image
---------------------------------------------
A single cat dominates the examples!



.. code-block:: python

    from PIL import Image
    img_url = 'https://github.com/dmlc/mxnet.js/blob/master/data/cat.png?raw=true'
    img_path = download_testdata(img_url, 'cat.png', module='data')
    img = Image.open(img_path).resize((224, 224))
    img_ycbcr = img.convert("YCbCr")  # convert to YCbCr
    img_y, img_cb, img_cr = img_ycbcr.split()
    x = np.array(img_y)[np.newaxis, np.newaxis, :, :]





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    File /workspace/.tvm_test_data/data/cat.png exists, skip.


Compile the model with relay
---------------------------------------------



.. code-block:: python

    target = 'llvm'

    input_name = '1'
    shape_dict = {input_name: x.shape}
    sym, params = relay.frontend.from_onnx(onnx_model, shape_dict)

    with relay.build_config(opt_level=1):
        intrp = relay.build_module.create_executor('graph', sym, tvm.cpu(0), target)







Execute on TVM
---------------------------------------------



.. code-block:: python

    dtype = 'float32'
    tvm_output = intrp.evaluate(sym)(tvm.nd.array(x.astype(dtype)), **params).asnumpy()







Display results
---------------------------------------------
We put input and output image neck to neck



.. code-block:: python

    from matplotlib import pyplot as plt
    out_y = Image.fromarray(np.uint8((tvm_output[0, 0]).clip(0, 255)), mode='L')
    out_cb = img_cb.resize(out_y.size, Image.BICUBIC)
    out_cr = img_cr.resize(out_y.size, Image.BICUBIC)
    result = Image.merge('YCbCr', [out_y, out_cb, out_cr]).convert('RGB')
    canvas = np.full((672, 672*2, 3), 255)
    canvas[0:224, 0:224, :] = np.asarray(img)
    canvas[:, 672:, :] = np.asarray(result)
    plt.imshow(canvas.astype(np.uint8))
    plt.show()



.. image:: /tutorials/frontend/images/sphx_glr_from_onnx_001.png
    :class: sphx-glr-single-img




**Total running time of the script:** ( 0 minutes  8.150 seconds)


.. _sphx_glr_download_tutorials_frontend_from_onnx.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: from_onnx.py <from_onnx.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: from_onnx.ipynb <from_onnx.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
